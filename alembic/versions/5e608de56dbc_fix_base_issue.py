"""Fix base issue

Revision ID: 5e608de56dbc
Revises: 86cbd57b5442
Create Date: 2025-03-16 11:15:44.177079

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# Import async session
from sqlalchemy.ext.asyncio import AsyncSession
from app.database.connection import AsyncSessionLocal

# revision identifiers, used by Alembic.
revision: str = '5e608de56dbc'
down_revision: Union[str, None] = '86cbd57b5442'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


async def upgrade() -> None:
    """Upgrade schema."""
    async with AsyncSessionLocal() as session:
        async with session.begin():
            await session.run_sync(do_upgrade)


def do_upgrade(connection):
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_tasks_id', table_name='tasks')
    op.drop_index('ix_tasks_title', table_name='tasks')
    op.drop_table('tasks')
    # ### end Alembic commands ###


async def downgrade() -> None:
    """Downgrade schema."""
    async with AsyncSessionLocal() as session:
        async with session.begin():
            await session.run_sync(do_downgrade)


def do_downgrade(connection):
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('priority', postgresql.ENUM('LOW', 'MEDIUM', 'HIGH', 'VERY_URGENT', name='priority_enum'), autoincrement=False, nullable=False),
        sa.Column('status', postgresql.ENUM('PENDING', 'IN_PROGRESS', 'COMPLETED', name='status_enum'), autoincrement=False, nullable=False),
        sa.Column('due_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tasks_user_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='tasks_pkey')
    )
    op.create_index('ix_tasks_title', 'tasks', ['title'], unique=False)
    op.create_index('ix_tasks_id', 'tasks', ['id'], unique=False)
    op.create_table('users',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('role', postgresql.ENUM('admin', 'user', name='roleenum'), server_default=sa.text("'user'::roleenum"), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    # ### end Alembic commands ###