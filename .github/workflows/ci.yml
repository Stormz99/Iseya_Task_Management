name: Iseya CI Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
  security-and-quality-scanning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      #################### OWASP Dependency Check ####################
      - name: Install OWASP Dependency Check
        run: |
          mkdir dc && cd dc
          curl -L https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.0/dependency-check-8.4.0-release.zip -o dc.zip
          unzip dc.zip
          chmod +x dependency-check/bin/dependency-check.sh

      - name: Run OWASP Dependency Check
        run: |
          ./dc/dependency-check/bin/dependency-check.sh \
            --project "Iseya Task Management" \
            --scan . \
            --format ALL \
            --out owasp-report \
            --prettyPrint \
            --failOnCVSS 11 || true

      - name: Upload OWASP Report
        uses: actions/upload-artifact@v4
        with:
          name: owasp-report
          path: owasp-report

      #################### Snyk Scan ####################
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install & Run Snyk
        run: |
          npm install -g snyk
          snyk auth ${{ secrets.SNYK_TOKEN }}
          snyk test --all-projects --json-file-output=snyk-report.json || true

      - name: Upload Snyk Report
        uses: actions/upload-artifact@v4
        with:
          name: snyk-report
          path: snyk-report.json

      #################### TruffleHog ####################
      - name: Install TruffleHog
        run: |
          curl -sSL https://github.com/trufflesecurity/trufflehog/releases/latest/download/trufflehog-linux-amd64 -o trufflehog
          chmod +x trufflehog
          sudo mv trufflehog /usr/local/bin/

      - name: Run TruffleHog
        run: |
          trufflehog git https://github.com/${{ github.repository }} \
            --branch=main \
            --json > trufflehog-report.json || true

      - name: Upload TruffleHog Report
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-report
          path: trufflehog-report.json

      #################### SonarCloud ####################
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=Stormz99_Iseya_Task_Management
            -Dsonar.organization=stormz99
            -Dsonar.host.url=https://sonarcloud.io
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      #################### Docker + Trivy ####################
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_JSON_KEY }}

      - name: Build Docker image
        run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/iseya-task:latest .

      - name: Push Docker image
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/iseya-task:latest

      - name: Install Trivy
        run: curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Run Trivy Scan
        run: |
          trivy image gcr.io/${{ secrets.GCP_PROJECT_ID }}/iseya-task:latest \
            --format json --output trivy-report.json || true

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json
