name: Iseya CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  security-scanning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Cache OWASP Dependency Check
        uses: actions/cache@v3
        with:
          path: dependency-check
          key: ${{ runner.os }}-dependency-check-v8.4.0
          restore-keys: |
            ${{ runner.os }}-dependency-check-

      - name: Run OWASP Dependency Check
        run: |
          mkdir -p dependency-check
          if [ ! -d "dependency-check/dependency-check" ]; then
            curl -L https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.0/dependency-check-8.4.0-release.zip -o dc.zip
            unzip dc.zip -d dependency-check
            chmod +x dependency-check/dependency-check/bin/dependency-check.sh
          fi
          ./dependency-check/dependency-check/bin/dependency-check.sh \
            --project "Iseya Task Management" \
            --scan . \
            --format "ALL"

      - name: Upload Dependency Check reports
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-reports
          path: dependency-check/reports/

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v1
        with:
          projectBaseDir: '.'
          args: >
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Snyk Scan
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: TruffleHog Scan
        uses: trufflesecurity/trufflehog@main
